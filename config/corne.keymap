/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
//Layers 

#define Base 0
#define Lower 1
#define Raise 2
#define Funct 3

// #define block
// #define SCSH &kp LS(LG(NUMBER_4))

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tdA2: tap_dance_RALT_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_RALT_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 2>, <&mo 3>;
        };
        tdg1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_GUI>, <&mo 3>;
        };
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_SHIFT>, <&kp LCTRL>;
        };
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RIGHT_SHIFT>, <&kp RALT>;
        };
    };

    macros {
        ae: ae {
            compatible = "zmk,behavior-macro";
            label = "AE";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp A>;
        };
        oe: oe {
            compatible = "zmk,behavior-macro";
            label = "OE";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp O>;
        };
        ue: ue {
            compatible = "zmk,behavior-macro";
            label = "UE";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp U>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&kp TAB   &kp Q  &kp W  &kp E  &kp R  &kp T          &kp Y      &kp U  &kp I      &kp O    &kp P     &kp GRAVE
&kp LALT  &kp A  &kp S  &kp D  &kp F  &kp G          &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp ENTER
&td2      &kp Z  &kp X  &kp C  &kp V  &kp B          &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &td3
                        &mo 1  &tdg1  &kp BACKSPACE  &kp SPACE  &tdA2  &kp RCTRL
            >;
        };

        lower_layer {
            label = "Lower";
            bindings = <
&kp ESC    &trans             &trans    &kp UP                    &trans                &trans         &kp APOSTROPHE     &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp PLUS         &kp DEL
&kp LCTRL  &kp LC(LG(SPACE))  &kp LEFT  &kp DOWN                  &kp RIGHT             &trans         &kp DOUBLE_QUOTES  &kp NUMBER_4   &kp NUMBER_5  &kp NUMBER_6  &kp MINUS        &kp RETURN
&kp LSHFT  &trans             &trans    &kp LS(LC(LG(NUMBER_4)))  &kp LS(LG(NUMBER_4))  &trans         &trans             &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9  &kp KP_MULTIPLY  &trans
                                        &trans                    &kp LEFT_GUI          &kp BACKSPACE  &kp SPACE          &kp RIGHT_ALT  &kp NUMBER_0
            >;
        };

        raise_layer {
            label = "Raise";
            bindings = <
&kp ESC    &kp EXCL      &kp AT        &kp HASH       &kp DLLR       &kp PRCNT             &kp CARET             &kp AMPS       &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &ae           &kp RA(S)     &oe            &ue            &kp LS(LA(NUMBER_2))  &kp LS(LC(EQUAL))  &kp EQUAL      &kp BSLH         &kp LBKT  &kp RBKT  &kp RETURN
&kp LSHFT  &kp LG(LEFT)  &kp LA(LEFT)  &kp RA(RIGHT)  &kp LG(RIGHT)  &trans                &kp UNDER             &kp PLUS       &kp PIPE         &kp LBRC  &kp RBRC  &kp TILDE
                                       &trans         &kp LEFT_GUI   &kp LG(BACKSPACE)     &kp SPACE             &kp RIGHT_ALT  &trans
            >;
        };

        Funct_layer {
            label = "Funct";
            bindings = <
&kp RC(F1)  &trans        &trans        &trans        &trans        &trans        &trans  &trans            &kp LA(LC(U))  &kp LA(LC(I))  &trans             &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &kp LA(LC(LEFT))  &kp LA(LC(J))  &kp LA(LC(K))  &kp LA(LC(RIGHT))  &kp LA(LC(RETURN))
&trans      &trans        &trans        &kp C_VOL_DN  &kp C_VOL_UP  &trans        &trans  &trans            &trans         &trans         &trans             &trans
                                        &trans        &trans        &trans        &trans  &trans            &trans
            >;
        };
    };
};
